// Mixins
// --------------------------------------------------

// Utilities
@import "mixins/hide-text.less";
@import "mixins/opacity.less";
@import "mixins/image.less";
@import "mixins/labels.less";
@import "mixins/reset-filter.less";
@import "mixins/resize.less";
@import "mixins/responsive-visibility.less";
@import "mixins/size.less";
@import "mixins/tab-focus.less";
@import "mixins/text-emphasis.less";
@import "mixins/text-overflow.less";
@import "mixins/vendor-prefixes.less";

// Components
@import "mixins/alerts.less";
@import "mixins/buttons.less";
@import "mixins/panels.less";
@import "mixins/pagination.less";
@import "mixins/list-group.less";
@import "mixins/nav-divider.less";
@import "mixins/forms.less";
@import "mixins/progress-bar.less";
@import "mixins/table-row.less";

// Skins
@import "mixins/background-variant.less";
@import "mixins/border-radius.less";
@import "mixins/gradients.less";

// Layout
@import "mixins/clearfix.less";
@import "mixins/center-block.less";
@import "mixins/nav-vertical-align.less";
@import "mixins/grid-framework.less";
@import "mixins/grid.less";


//CUSTOM

.arrow(
@size, 
@color, 
@direction, 
@offset,
@border-size: 0, 
@border-color: inherit) {
    position: relative;
    &:after, 
        &:before {
        content: "";
        position: absolute;
        width: 0;
        height: 0;
    }
}

.arrow(@size, @color, @direction, @offset, @border-size: 0, @border-color: inherit) when (@direction = top) {
    @m-size: @size + (@border-size*2);

    &:after {
        bottom: 100%;
        left: @offset;
        margin-left: -@size;

        border-left: @size solid transparent;
        border-right: @size solid transparent;
        border-bottom: @size solid @color;
    }

    &:before {
        bottom: 100%;
        left: @offset;
        margin-left: -@m-size;

        border-left: @m-size solid transparent;
        border-right: @m-size solid transparent;
        border-bottom: @m-size solid;
        border-bottom-color: @border-color;
    }
}

.arrow(@size, @color, @direction, @offset, @border-size: 0, @border-color: inherit) when (@direction = bottom) {
    @m-size: @size + (@border-size*2);

    &:after {
        top: 100%;
        left: @offset;
        margin-left: -@size;

        border-left: @size solid transparent;
        border-right: @size solid transparent;
        border-top: @size solid @color;
    }

    &:before {
        top: 100%;
        left: @offset;
        margin-left: -@m-size;
        border-left: @m-size solid transparent;
        border-right: @m-size solid transparent;
        border-top: @m-size solid;
        border-top-color: @border-color;
    }
}

.arrow(@size, @color, @direction, @offset, @border-size: 0, @border-color: inherit) when (@direction = right) {
    @m-size: @size + (@border-size*2);

    &:after {
        left: 100%;
        top: @offset;
        margin-top: -@size;

        border-top: @size solid transparent;
        border-bottom: @size solid transparent;
        border-left: @size solid @color;
    }
    &:before {
        left: 100%;
        top: @offset;
        margin-top: -@m-size;

        border-top: @m-size solid transparent;
        border-bottom: @m-size solid transparent;
        border-left: @m-size solid;
        border-left-color: @border-color;
    }
}

.arrow(@size, @color, @direction, @offset, @border-size: 0, @border-color: inherit) when (@direction = left) {
    @m-size: @size + (@border-size*2);

    &:after {
        right: 100%;
        top: @offset;
        margin-top: -@size;

        border-top: @size solid transparent;
        border-bottom: @size solid transparent;
        border-right: @size solid @color;
    } 
    &:before {
        right: 100%;
        top: @offset;
        margin-top: -@m-size;

        border-top: @m-size solid transparent;
        border-bottom: @m-size solid transparent;
        border-right: @m-size solid;
        border-right-color: @border-color;
    }
}